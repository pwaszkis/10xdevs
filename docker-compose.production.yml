services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        - USER_ID=${USER_ID:-1000}
        - GROUP_ID=${GROUP_ID:-1000}
    image: vibetravels-app:latest
    container_name: vibetravels-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/php-production.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - vibetravels
    depends_on:
      - mysql
      - redis
    environment:
      - XDEBUG_MODE=off
      - PHP_OPCACHE_ENABLE=1
    healthcheck:
      test: ["CMD", "php-fpm-healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: vibetravels-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/production.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - vibetravels
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  mysql:
    image: mysql:8.0
    container_name: vibetravels-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-vibetravels}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_USER: ${DB_USERNAME:-vibetravels}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - vibetravels
    command: --default-authentication-plugin=mysql_native_password --max_connections=200 --innodb_buffer_pool_size=256M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-root}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: vibetravels-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - vibetravels
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        - USER_ID=${USER_ID:-1000}
        - GROUP_ID=${GROUP_ID:-1000}
    image: vibetravels-app:latest
    container_name: vibetravels-worker
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/php-production.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - vibetravels
    depends_on:
      - mysql
      - redis
    environment:
      - XDEBUG_MODE=off
    command: php artisan queue:work redis --sleep=3 --tries=3 --max-time=3600 --memory=128

  scheduler:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        - USER_ID=${USER_ID:-1000}
        - GROUP_ID=${GROUP_ID:-1000}
    image: vibetravels-app:latest
    container_name: vibetravels-scheduler
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/php-production.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - vibetravels
    depends_on:
      - mysql
      - redis
    environment:
      - XDEBUG_MODE=off
    command: /bin/sh -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"

  certbot:
    image: certbot/certbot
    container_name: vibetravels-certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    profiles:
      - production

  node:
    image: node:22-alpine
    container_name: vibetravels-node
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - vibetravels
    profiles:
      - build

networks:
  vibetravels:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
